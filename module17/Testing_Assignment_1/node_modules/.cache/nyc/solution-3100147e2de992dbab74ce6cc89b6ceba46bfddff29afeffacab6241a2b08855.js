function cov_16soot2pbe(){var path="/Users/yhunt/Thinkful/module17/Testing_Assignment_1/src/solution.js";var hash="0b024aa3c843ddea82a3173735532e6a851bac86";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/yhunt/Thinkful/module17/Testing_Assignment_1/src/solution.js",statementMap:{"0":{start:{line:6,column:15},end:{line:6,column:17}},"1":{start:{line:7,column:15},end:{line:7,column:17}},"2":{start:{line:8,column:15},end:{line:8,column:17}},"3":{start:{line:9,column:2},end:{line:11,column:3}},"4":{start:{line:9,column:15},end:{line:9,column:16}},"5":{start:{line:10,column:4},end:{line:10,column:85}},"6":{start:{line:12,column:2},end:{line:12,column:22}},"7":{start:{line:13,column:2},end:{line:13,column:22}},"8":{start:{line:14,column:2},end:{line:14,column:22}},"9":{start:{line:18,column:0},end:{line:18,column:42}}},fnMap:{"0":{name:"partitionStudentsByScore",decl:{start:{line:5,column:9},end:{line:5,column:33}},loc:{start:{line:5,column:51},end:{line:16,column:1}},line:5}},branchMap:{"0":{loc:{start:{line:10,column:4},end:{line:10,column:84}},type:"cond-expr",locations:[{start:{line:10,column:33},end:{line:10,column:57}},{start:{line:10,column:60},end:{line:10,column:84}}],line:10}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0b024aa3c843ddea82a3173735532e6a851bac86"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_16soot2pbe=function(){return actualCoverage;};}return actualCoverage;}cov_16soot2pbe();/*
  Write a function that separates students into two buckets based on a given score. The end result for the "happy path" should be an array with two arrays inside of it.
*/function partitionStudentsByScore(students,score){cov_16soot2pbe().f[0]++;let arrayA=(cov_16soot2pbe().s[0]++,[]);let arrayB=(cov_16soot2pbe().s[1]++,[]);let result=(cov_16soot2pbe().s[2]++,[]);cov_16soot2pbe().s[3]++;for(let i=(cov_16soot2pbe().s[4]++,0);i<students.length;i++){cov_16soot2pbe().s[5]++;students[i].score<=score?(cov_16soot2pbe().b[0][0]++,arrayA.push(students[i])):(cov_16soot2pbe().b[0][1]++,arrayB.push(students[i]));}// end for
cov_16soot2pbe().s[6]++;result.push(arrayA);cov_16soot2pbe().s[7]++;result.push(arrayB);cov_16soot2pbe().s[8]++;console.log(result);// return result;
}cov_16soot2pbe().s[9]++;module.exports=partitionStudentsByScore;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvbHV0aW9uLmpzIl0sIm5hbWVzIjpbInBhcnRpdGlvblN0dWRlbnRzQnlTY29yZSIsInN0dWRlbnRzIiwic2NvcmUiLCJhcnJheUEiLCJhcnJheUIiLCJyZXN1bHQiLCJpIiwibGVuZ3RoIiwicHVzaCIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiK2pEQWVZOzJGQWZaO0FBQ0E7QUFDQSxFQUVBLFFBQVNBLENBQUFBLHdCQUFULENBQWtDQyxRQUFsQyxDQUE0Q0MsS0FBNUMsQ0FBbUQseUJBQ2pELEdBQUlDLENBQUFBLE1BQU0sMEJBQUcsRUFBSCxDQUFWLENBQ0EsR0FBSUMsQ0FBQUEsTUFBTSwwQkFBRyxFQUFILENBQVYsQ0FDQSxHQUFJQyxDQUFBQSxNQUFNLDBCQUFHLEVBQUgsQ0FBVixDQUhpRCx3QkFJakQsSUFBSyxHQUFJQyxDQUFBQSxDQUFDLDBCQUFHLENBQUgsQ0FBVixDQUFnQkEsQ0FBQyxDQUFHTCxRQUFRLENBQUNNLE1BQTdCLENBQXFDRCxDQUFDLEVBQXRDLENBQTBDLHlCQUN4Q0wsUUFBUSxDQUFDSyxDQUFELENBQVIsQ0FBWUosS0FBWixFQUFxQkEsS0FBckIsNkJBQTZCQyxNQUFNLENBQUNLLElBQVAsQ0FBWVAsUUFBUSxDQUFDSyxDQUFELENBQXBCLENBQTdCLDhCQUF3REYsTUFBTSxDQUFDSSxJQUFQLENBQVlQLFFBQVEsQ0FBQ0ssQ0FBRCxDQUFwQixDQUF4RCxFQUNELENBQUM7QUFOK0Msd0JBT2pERCxNQUFNLENBQUNHLElBQVAsQ0FBWUwsTUFBWixFQVBpRCx3QkFRakRFLE1BQU0sQ0FBQ0csSUFBUCxDQUFZSixNQUFaLEVBUmlELHdCQVNqREssT0FBTyxDQUFDQyxHQUFSLENBQVlMLE1BQVosRUFDQTtBQUNELEMsd0JBRURNLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQlosd0JBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAgV3JpdGUgYSBmdW5jdGlvbiB0aGF0IHNlcGFyYXRlcyBzdHVkZW50cyBpbnRvIHR3byBidWNrZXRzIGJhc2VkIG9uIGEgZ2l2ZW4gc2NvcmUuIFRoZSBlbmQgcmVzdWx0IGZvciB0aGUgXCJoYXBweSBwYXRoXCIgc2hvdWxkIGJlIGFuIGFycmF5IHdpdGggdHdvIGFycmF5cyBpbnNpZGUgb2YgaXQuXG4qL1xuXG5mdW5jdGlvbiBwYXJ0aXRpb25TdHVkZW50c0J5U2NvcmUoc3R1ZGVudHMsIHNjb3JlKSB7XG4gIGxldCBhcnJheUEgPSBbXTtcbiAgbGV0IGFycmF5QiA9IFtdO1xuICBsZXQgcmVzdWx0ID0gW107XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3R1ZGVudHMubGVuZ3RoOyBpKyspIHtcbiAgICBzdHVkZW50c1tpXS5zY29yZSA8PSBzY29yZSA/IGFycmF5QS5wdXNoKHN0dWRlbnRzW2ldKSA6IGFycmF5Qi5wdXNoKHN0dWRlbnRzW2ldKTtcbiAgfSAvLyBlbmQgZm9yXG4gIHJlc3VsdC5wdXNoKGFycmF5QSk7XG4gIHJlc3VsdC5wdXNoKGFycmF5Qik7XG4gIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gIC8vIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcGFydGl0aW9uU3R1ZGVudHNCeVNjb3JlO1xuIl19