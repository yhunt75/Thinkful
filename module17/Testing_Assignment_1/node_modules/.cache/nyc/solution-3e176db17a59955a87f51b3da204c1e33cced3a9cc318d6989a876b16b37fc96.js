function cov_16soot2pbe(){var path="/Users/yhunt/Thinkful/module17/Testing_Assignment_1/src/solution.js";var hash="747ebff60b5e0bea78c15d822060fc756ee8ffb6";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/yhunt/Thinkful/module17/Testing_Assignment_1/src/solution.js",statementMap:{"0":{start:{line:6,column:14},end:{line:6,column:16}},"1":{start:{line:7,column:14},end:{line:7,column:16}},"2":{start:{line:9,column:2},end:{line:11,column:3}},"3":{start:{line:9,column:15},end:{line:9,column:16}},"4":{start:{line:10,column:4},end:{line:10,column:82}},"5":{start:{line:13,column:2},end:{line:13,column:23}},"6":{start:{line:16,column:0},end:{line:16,column:42}}},fnMap:{"0":{name:"partitionStudentsByScore",decl:{start:{line:5,column:9},end:{line:5,column:33}},loc:{start:{line:5,column:51},end:{line:14,column:1}},line:5}},branchMap:{"0":{loc:{start:{line:10,column:4},end:{line:10,column:81}},type:"cond-expr",locations:[{start:{line:10,column:32},end:{line:10,column:55}},{start:{line:10,column:58},end:{line:10,column:81}}],line:10}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"747ebff60b5e0bea78c15d822060fc756ee8ffb6"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_16soot2pbe=function(){return actualCoverage;};}return actualCoverage;}cov_16soot2pbe();/*
  Write a function that separates students into two buckets based on a given score. The end result for the "happy path" should be an array with two arrays inside of it.
*/function partitionStudentsByScore(students,score){cov_16soot2pbe().f[0]++;let below=(cov_16soot2pbe().s[0]++,[]);let above=(cov_16soot2pbe().s[1]++,[]);cov_16soot2pbe().s[2]++;for(let i=(cov_16soot2pbe().s[3]++,0);i<students.length;i++){cov_16soot2pbe().s[4]++;students[i].score<score?(cov_16soot2pbe().b[0][0]++,below.push(students[i])):(cov_16soot2pbe().b[0][1]++,above.push(students[i]));}// end for
cov_16soot2pbe().s[5]++;return[below,above];}cov_16soot2pbe().s[6]++;module.exports=partitionStudentsByScore;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvbHV0aW9uLmpzIl0sIm5hbWVzIjpbInBhcnRpdGlvblN0dWRlbnRzQnlTY29yZSIsInN0dWRlbnRzIiwic2NvcmUiLCJiZWxvdyIsImFib3ZlIiwiaSIsImxlbmd0aCIsInB1c2giLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoieTRDQWVZOzJGQWZaO0FBQ0E7QUFDQSxFQUVBLFFBQVNBLENBQUFBLHdCQUFULENBQWtDQyxRQUFsQyxDQUE0Q0MsS0FBNUMsQ0FBbUQseUJBQ2pELEdBQUlDLENBQUFBLEtBQUssMEJBQUcsRUFBSCxDQUFULENBQ0EsR0FBSUMsQ0FBQUEsS0FBSywwQkFBRyxFQUFILENBQVQsQ0FGaUQsd0JBSWpELElBQUssR0FBSUMsQ0FBQUEsQ0FBQywwQkFBRyxDQUFILENBQVYsQ0FBZ0JBLENBQUMsQ0FBR0osUUFBUSxDQUFDSyxNQUE3QixDQUFxQ0QsQ0FBQyxFQUF0QyxDQUEwQyx5QkFDeENKLFFBQVEsQ0FBQ0ksQ0FBRCxDQUFSLENBQVlILEtBQVosQ0FBb0JBLEtBQXBCLDZCQUE0QkMsS0FBSyxDQUFDSSxJQUFOLENBQVdOLFFBQVEsQ0FBQ0ksQ0FBRCxDQUFuQixDQUE1Qiw4QkFBc0RELEtBQUssQ0FBQ0csSUFBTixDQUFXTixRQUFRLENBQUNJLENBQUQsQ0FBbkIsQ0FBdEQsRUFDRCxDQUFDO0FBTitDLHdCQVFqRCxNQUFPLENBQUNGLEtBQUQsQ0FBT0MsS0FBUCxDQUFQLENBQ0QsQyx3QkFFREksTUFBTSxDQUFDQyxPQUFQLENBQWlCVCx3QkFBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICBXcml0ZSBhIGZ1bmN0aW9uIHRoYXQgc2VwYXJhdGVzIHN0dWRlbnRzIGludG8gdHdvIGJ1Y2tldHMgYmFzZWQgb24gYSBnaXZlbiBzY29yZS4gVGhlIGVuZCByZXN1bHQgZm9yIHRoZSBcImhhcHB5IHBhdGhcIiBzaG91bGQgYmUgYW4gYXJyYXkgd2l0aCB0d28gYXJyYXlzIGluc2lkZSBvZiBpdC5cbiovXG5cbmZ1bmN0aW9uIHBhcnRpdGlvblN0dWRlbnRzQnlTY29yZShzdHVkZW50cywgc2NvcmUpIHtcbiAgbGV0IGJlbG93ID0gW107XG4gIGxldCBhYm92ZSA9IFtdO1xuICBcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHVkZW50cy5sZW5ndGg7IGkrKykgeyBcbiAgICBzdHVkZW50c1tpXS5zY29yZSA8IHNjb3JlID8gYmVsb3cucHVzaChzdHVkZW50c1tpXSkgOiBhYm92ZS5wdXNoKHN0dWRlbnRzW2ldKTtcbiAgfSAvLyBlbmQgZm9yXG4gIFxuICByZXR1cm4gW2JlbG93LGFib3ZlXTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBwYXJ0aXRpb25TdHVkZW50c0J5U2NvcmU7XG4iXX0=