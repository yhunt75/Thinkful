function cov_16lv7yiotp(){var path="/Users/yhunt/Thinkful/module22/Mock_Interview_Web_Requests_2/src/solution.js";var hash="02572377a4f0c0db883d36e383672ddfca73e78b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/yhunt/Thinkful/module22/Mock_Interview_Web_Requests_2/src/solution.js",statementMap:{"0":{start:{line:1,column:14},end:{line:1,column:30}},"1":{start:{line:9,column:19},end:{line:9,column:61}},"2":{start:{line:10,column:2},end:{line:10,column:24}},"3":{start:{line:27,column:0},end:{line:27,column:28}}},fnMap:{"0":{name:"getRates",decl:{start:{line:7,column:15},end:{line:7,column:23}},loc:{start:{line:7,column:34},end:{line:24,column:1}},line:7}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"02572377a4f0c0db883d36e383672ddfca73e78b"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_16lv7yiotp=function(){return actualCoverage;};}return actualCoverage;}cov_16lv7yiotp();const axios=(cov_16lv7yiotp().s[0]++,require("axios"));//Write your functions here
async function getRates(currency){cov_16lv7yiotp().f[0]++;// currency = 'USD' or 'EUR'
// exchange rate url
const base_url=(cov_16lv7yiotp().s[1]++,'https://api.ratesapi.io/api/latest?base=');cov_16lv7yiotp().s[2]++;console.log(currency);// for (let i = 0; i < currency.length; i++){
//   // base rate
//   let cur = currency;
//   let url = base_url + cur;
//   // api call upates url
//   await axios
//     .get(url)
//     .then(console.log(url))
// }
// return `url${cur}`
}//Do not modify code below this line
cov_16lv7yiotp().s[3]++;module.exports={getRates};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvbHV0aW9uLmpzIl0sIm5hbWVzIjpbImF4aW9zIiwicmVxdWlyZSIsImdldFJhdGVzIiwiY3VycmVuY3kiLCJiYXNlX3VybCIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoic2dDQWVZOzJGQWZaLEtBQU1BLENBQUFBLEtBQUssMEJBQUdDLE9BQU8sQ0FBQyxPQUFELENBQVYsQ0FBWCxDQUNBO0FBS0EsY0FBZUMsQ0FBQUEsUUFBZixDQUF3QkMsUUFBeEIsQ0FBa0MseUJBQUU7QUFDbEM7QUFDQSxLQUFNQyxDQUFBQSxRQUFRLDBCQUFHLDBDQUFILENBQWQsQ0FGZ0Msd0JBR2hDQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsUUFBWixFQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBR0QsQ0FFRDt3QkFDQUksTUFBTSxDQUFDQyxPQUFQLENBQWlCLENBQUNOLFFBQUQsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBheGlvcyA9IHJlcXVpcmUoXCJheGlvc1wiKTtcbi8vV3JpdGUgeW91ciBmdW5jdGlvbnMgaGVyZVxuXG5cblxuXG5hc3luYyBmdW5jdGlvbiBnZXRSYXRlcyhjdXJyZW5jeSkgeyAvLyBjdXJyZW5jeSA9ICdVU0QnIG9yICdFVVInXG4gIC8vIGV4Y2hhbmdlIHJhdGUgdXJsXG4gIGNvbnN0IGJhc2VfdXJsID0gJ2h0dHBzOi8vYXBpLnJhdGVzYXBpLmlvL2FwaS9sYXRlc3Q/YmFzZT0nO1xuICBjb25zb2xlLmxvZyhjdXJyZW5jeSk7XG4gIC8vIGZvciAobGV0IGkgPSAwOyBpIDwgY3VycmVuY3kubGVuZ3RoOyBpKyspe1xuICAvLyAgIC8vIGJhc2UgcmF0ZVxuICAvLyAgIGxldCBjdXIgPSBjdXJyZW5jeTtcbiAgLy8gICBsZXQgdXJsID0gYmFzZV91cmwgKyBjdXI7XG4gIC8vICAgLy8gYXBpIGNhbGwgdXBhdGVzIHVybFxuICAvLyAgIGF3YWl0IGF4aW9zXG4gIC8vICAgICAuZ2V0KHVybClcbiAgLy8gICAgIC50aGVuKGNvbnNvbGUubG9nKHVybCkpXG4gICAgXG4gIC8vIH1cbiAgLy8gcmV0dXJuIGB1cmwke2N1cn1gXG5cbiAgXG59XG5cbi8vRG8gbm90IG1vZGlmeSBjb2RlIGJlbG93IHRoaXMgbGluZVxubW9kdWxlLmV4cG9ydHMgPSB7Z2V0UmF0ZXN9O1xuXG5cbiJdfQ==